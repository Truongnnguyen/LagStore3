/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package lags.view.LinhKien;


import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lags.dao.RAMDao;
import lags.entity.RAM;
import lags.util.XDialog;
import lags.view.SanPhamform;

/**
 *
 * @author icebear
 */
public class RamJDialog extends javax.swing.JDialog {

    /**
     * Creates new form RamJDialog
     */
    RAMDao dao = new RAMDao();
    List<RAM> lstR = List.of();
    private SanPhamform spf;

    public RamJDialog(java.awt.Frame parent, boolean modal, SanPhamform spf) {
        super(parent, modal);
        initComponents();
        this.spf = spf;
        this.loadCBO();
        this.fillTable();
        this.setForm(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaRam = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cboLoaiRam = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtDungLuong = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRAM = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnTaoMa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RAM");

        jLabel2.setText("Mã Ram");

        txtMaRam.setEditable(false);

        jLabel3.setText("Loại Ram");

        cboLoaiRam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Dung Lượng");

        tblRAM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Ram", "Loại Ram", "Dung Lượng"
            }
        ));
        tblRAM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRAMMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRAM);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnTaoMa.setText("Tạo Mã");
        btnTaoMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboLoaiRam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMaRam, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTaoMa)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtDungLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDungLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTaoMa))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLoaiRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        this.create();
        this.fillTable();
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblRAMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRAMMouseClicked
        // TODO add your handling code here:
        int row = tblRAM.getSelectedRow();
        this.setForm(row);
    }//GEN-LAST:event_tblRAMMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        this.update();
        this.fillTable();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.delete();
        this.fillTable();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTaoMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMaActionPerformed
        // TODO add your handling code here:
        txtMaRam.setText(generateMaSPCT());
    }//GEN-LAST:event_btnTaoMaActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        spf.open();
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RamJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RamJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RamJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RamJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                RamJDialog dialog = new RamJDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTaoMa;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboLoaiRam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRAM;
    private javax.swing.JTextField txtDungLuong;
    private javax.swing.JTextField txtMaRam;
    // End of variables declaration//GEN-END:variables

    public void loadCBO() {
        DefaultComboBoxModel cbomodel = new DefaultComboBoxModel();
        cboLoaiRam.setModel(cbomodel);
        lstR = dao.findAll();

        Set<String> tenRDaTHem = new HashSet();

        for (RAM ram : lstR) {
            String ten = ram.getTenRAM();
            if (!tenRDaTHem.contains(ten)) {
                cbomodel.addElement(ram.getTenRAM());
                tenRDaTHem.add(ten);
            }
//            cbomodel.addElement(ram.getTenRAM());
        }

    }

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblRAM.getModel();
        model.setRowCount(0);

        lstR = dao.findAll();
        lstR.forEach(item -> {
            model.addRow(new Object[]{
                item.getMaRAM(),
                item.getTenRAM(),
                item.getDungLuong()
            });
        });

    }

    public void setForm(int row) {
        txtMaRam.setText(tblRAM.getValueAt(row, 0).toString());
        cboLoaiRam.setSelectedItem(tblRAM.getValueAt(row, 1).toString());
        txtDungLuong.setText(tblRAM.getValueAt(row, 2).toString());
    }
    
    public RAM getForm(){
        RAM entity = new RAM();
        entity.setMaRAM(txtMaRam.getText());
        entity.setTenRAM(cboLoaiRam.getSelectedItem().toString());
        entity.setDungLuong(txtDungLuong.getText());
        
        
        return entity;
    }
    
    public void create(){
        if (txtMaRam.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã Ram không được để trống!");
            return; // Dừng lại, không tiếp tục thêm
        }
        if (txtDungLuong.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Dung lượng Ram không được để trống!");
            return; // Dừng lại, không tiếp tục thêm
        }
        RAM entity=this.getForm();
        dao.create(entity);
        this.fillTable();
    }
    
    public void update(){
        if (txtMaRam.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã Ram không được để trống!");
            return; // Dừng lại, không tiếp tục thêm
        }
        if (txtDungLuong.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Dung lượng Ram không được để trống!");
            return; // Dừng lại, không tiếp tục thêm
        }
        RAM entity=this.getForm();
        dao.update(entity);
        this.fillTable();
    }
    
    public void delete(){
        if (XDialog.confirm("Bạn thực sự muốn xóa?")) {
            String id = txtMaRam.getText();
            dao.deleteByID(id);
            this.fillTable();
        }
    }
    
    private String generateMaSPCT() {
        List<RAM> list = dao.findAll(); // lấy tất cả sản phẩm từ DB
        int maxNumber = 0;

        for (RAM ram : list) {
            String ma = ram.getMaRAM(); // ví dụ: "SP12"
            if (ma.toUpperCase().startsWith("R")) {
                try {
                    int number = Integer.parseInt(ma.substring(1));
                    if (number > maxNumber) {
                        maxNumber = number;
                    }
                } catch (NumberFormatException e) {
                    // Bỏ qua mã sai định dạng
                }
            }
        }

        return "R" + (maxNumber + 1);
    }

}
