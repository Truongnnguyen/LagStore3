/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lags.view;

import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import lags.dao.CPUDao;
import lags.dao.DungLuongDao;
import lags.dao.GPUDao;
import lags.dao.IMEIDao;
import lags.dao.RAMDao;
import lags.dao.SanPhamChiTietDao;
import lags.dao.SanPhamDao;
import lags.dao.XuatXuDao;
import lags.entity.CPU;
import lags.entity.DungLuong;
import lags.entity.GPU;
import lags.entity.IMEI;
import lags.entity.RAM;
import lags.entity.SanPham;
import lags.entity.SanPhamChiTiet;
import lags.entity.ThongTinSP;
import lags.entity.XuatXu;
import lags.util.XDialog;
import lags.view.LinhKien.CpuJDialog;
import lags.view.LinhKien.DungLuongJDialog;
import lags.view.LinhKien.GPUJDialog;
import lags.view.LinhKien.IMEIJDialog;
import lags.view.LinhKien.RamJDialog;
import lags.view.LinhKien.XuatXuJDialog;
import lags.LagStore.GradientButton;

/**
 *
 * @author icebear
 */
public class SanPhamform extends javax.swing.JPanel {

    /**
     * Creates new form SanPhamform
     */
    SanPhamDao daoSP = new SanPhamDao();
    SanPhamChiTietDao daoSPCT = new SanPhamChiTietDao();
    List<SanPham> lstSP = List.of();
    List<ThongTinSP> lstTtSP = List.of();

    public SanPhamform() {
        initComponents();
        this.fillSanPham();
        this.fillSPCT();
        this.setForm(0);
        this.loadCPU();
        this.loadRam();
        this.loadGPU();
        this.loadDungLuong();
        this.loadXuatXu();

        txtTimKiemSP.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                TimKiemSP();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                TimKiemSP();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                TimKiemSP();
            }
        });

        txtTimKiemSPCT.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                TimKiemSPCT();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                TimKiemSPCT();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                TimKiemSPCT();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        btnThemSP = new GradientButton("Thêm");
        btnSuaSP = new GradientButton("Cập Nhật");
        btnXoaSP = new GradientButton("Xóa");
        cboXuatXu = new javax.swing.JComboBox<>();
        btnXuatXu = new GradientButton("Xuất Xứ");
        jLabel15 = new javax.swing.JLabel();
        txtTimKiemSP = new javax.swing.JTextField();
        btnTaoMaSP = new GradientButton("Tạo Mã");
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaSPCT = new javax.swing.JTextField();
        cboCPU = new javax.swing.JComboBox<>();
        cboRAM = new javax.swing.JComboBox<>();
        cboGPU = new javax.swing.JComboBox<>();
        cboDungLuong = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSPCT = new javax.swing.JTable();
        btnThemSPCT = new GradientButton("Thêm SP");
        btnSuaSPCT = new GradientButton("Cập Nhật SP");
        btnXoaSPCT = new GradientButton("Xóa SP");
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtMaSP2 = new javax.swing.JTextField();
        txtTenSP2 = new javax.swing.JTextField();
        btnCPU = new GradientButton("Chi Tiết");
        btnRam = new GradientButton("Chi Tiết");
        btnGPU = new GradientButton("Chi Tiết");
        btnDungLuong = new GradientButton("Chi Tiết");
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        txtTimKiemSPCT = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnTaoMaSPCT = new GradientButton("Tạo Mã");
        jScrollPane3 = new javax.swing.JScrollPane();
        tblIMEI = new javax.swing.JTable();
        btnQLIMEI = new GradientButton("QL IMEI");

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Xuất Xứ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        jLabel9.setText("Mã Sản Phẩm");

        txtMaSP.setEditable(false);

        jLabel10.setText("Tên Sản Phẩm");

        jLabel11.setText("Xuất Xứ");

        txtTenSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenSPActionPerformed(evt);
            }
        });

        btnThemSP.setText("Thêm");
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        btnSuaSP.setText("Cập nhật");
        btnSuaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSPActionPerformed(evt);
            }
        });

        btnXoaSP.setText("Xóa");
        btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPActionPerformed(evt);
            }
        });

        cboXuatXu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnXuatXu.setText("Xuất Xứ");
        btnXuatXu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatXuActionPerformed(evt);
            }
        });

        jLabel15.setText("Tìm kiếm");

        btnTaoMaSP.setText("Tạo Mã");
        btnTaoMaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMaSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTenSP)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnTaoMaSP)
                                        .addGap(0, 3, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cboXuatXu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnXuatXu))
                                    .addComponent(txtTimKiemSP))))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(btnThemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSuaSP))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(145, 145, 145)
                                .addComponent(btnXoaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTaoMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXuatXu))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSuaSP)
                    .addComponent(btnThemSP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXoaSP)
                .addGap(69, 69, 69))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("Sản Phẩm", jPanel1);

        jLabel2.setText("Mã Sản Phẩm CT");

        jLabel3.setText("CPU");

        jLabel4.setText("RAM");

        jLabel5.setText("GPU");

        jLabel6.setText("Dung Lượng");

        txtMaSPCT.setEditable(false);

        cboCPU.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboRAM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboGPU.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboDungLuong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblSPCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SPCT", "Mã SP", "Tên SP", "CPU", "RAM", "Dung Lượng", "GPU", "Giá", "SL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSPCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSPCTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSPCT);
        if (tblSPCT.getColumnModel().getColumnCount() > 0) {
            tblSPCT.getColumnModel().getColumn(0).setResizable(false);
            tblSPCT.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblSPCT.getColumnModel().getColumn(1).setResizable(false);
            tblSPCT.getColumnModel().getColumn(1).setPreferredWidth(40);
            tblSPCT.getColumnModel().getColumn(4).setResizable(false);
            tblSPCT.getColumnModel().getColumn(4).setPreferredWidth(40);
            tblSPCT.getColumnModel().getColumn(5).setPreferredWidth(70);
            tblSPCT.getColumnModel().getColumn(8).setResizable(false);
            tblSPCT.getColumnModel().getColumn(8).setPreferredWidth(50);
        }

        btnThemSPCT.setText("Thêm SP");
        btnThemSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPCTActionPerformed(evt);
            }
        });

        btnSuaSPCT.setText("Cập Nhật SP");
        btnSuaSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSPCTActionPerformed(evt);
            }
        });

        btnXoaSPCT.setText("Xóa SP");
        btnXoaSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPCTActionPerformed(evt);
            }
        });

        jLabel12.setText("Mã Sản Phẩm");

        jLabel13.setText("Tên Sản Phẩm");

        txtMaSP2.setEditable(false);

        txtTenSP2.setEditable(false);

        btnCPU.setText("Chi Tiết");
        btnCPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCPUActionPerformed(evt);
            }
        });

        btnRam.setText("Chi Tiết");
        btnRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRamActionPerformed(evt);
            }
        });

        btnGPU.setText("Chi Tiết");
        btnGPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGPUActionPerformed(evt);
            }
        });

        btnDungLuong.setText("Chi Tiết");
        btnDungLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDungLuongActionPerformed(evt);
            }
        });

        jLabel8.setText("Giá");

        jLabel14.setText("Số Lượng");

        txtSoLuong.setEditable(false);

        jLabel16.setText("Tìm Kiếm");

        btnTaoMaSPCT.setText("Tạo Mã");
        btnTaoMaSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMaSPCTActionPerformed(evt);
            }
        });

        tblIMEI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã", "Mã SPCT", "Số IMEI"
            }
        ));
        jScrollPane3.setViewportView(tblIMEI);
        if (tblIMEI.getColumnModel().getColumnCount() > 0) {
            tblIMEI.getColumnModel().getColumn(0).setResizable(false);
            tblIMEI.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        btnQLIMEI.setText("QL IMEI");
        btnQLIMEI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLIMEIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTimKiemSPCT, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTenSP2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaSP2, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                    .addComponent(txtMaSPCT))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTaoMaSPCT)))
                        .addGap(88, 88, 88)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cboDungLuong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboGPU, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboRAM, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboCPU, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGPU)
                            .addComponent(btnDungLuong)
                            .addComponent(btnRam)
                            .addComponent(btnCPU))
                        .addGap(0, 183, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnThemSPCT)
                                .addGap(18, 18, 18)
                                .addComponent(btnSuaSPCT)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoaSPCT)
                                .addGap(18, 18, 18)
                                .addComponent(btnQLIMEI)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaSPCT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTaoMaSPCT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaSP2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTenSP2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTimKiemSPCT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(42, 42, 42))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(cboDungLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cboCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboGPU, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(btnDungLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnGPU, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(13, 13, 13)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemSPCT)
                    .addComponent(btnSuaSPCT)
                    .addComponent(btnXoaSPCT)
                    .addComponent(btnQLIMEI))
                .addGap(168, 168, 168))
        );

        tabs.addTab("Sản Phẩm Chi Tiết", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 957, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenSPActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:

        int row = tblSanPham.getSelectedRow();
        this.setForm(row);

        if (evt.getClickCount() == 2) {
            tabs.setSelectedIndex(1);
            this.fillSPCT();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnSuaSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSPCTActionPerformed
        // TODO add your handling code here:
        this.updateSPCT();
        this.fillSPCT();

    }//GEN-LAST:event_btnSuaSPCTActionPerformed

    private void btnCPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCPUActionPerformed
        // TODO add your handling code here:
        CpuJDialog dialog = new CpuJDialog((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this), true, this);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);

    }//GEN-LAST:event_btnCPUActionPerformed

    private void btnRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRamActionPerformed
        // TODO add your handling code here:
        RamJDialog dialog = new RamJDialog((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this), true, this);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnRamActionPerformed

    private void tblSPCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSPCTMouseClicked
        // TODO add your handling code here:
        int row = tblSPCT.getSelectedRow();
        this.setForm1(row);
        this.fillIMEI();
    }//GEN-LAST:event_tblSPCTMouseClicked

    private void btnGPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGPUActionPerformed
        // TODO add your handling code here:
        GPUJDialog dialog = new GPUJDialog((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this), true, this);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnGPUActionPerformed

    private void btnDungLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDungLuongActionPerformed
        // TODO add your handling code here:
        DungLuongJDialog dialog = new DungLuongJDialog((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this), true, this);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);

    }//GEN-LAST:event_btnDungLuongActionPerformed

    private void btnThemSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPCTActionPerformed
        // TODO add your handling code here:
        this.createSPCT();
        IMEIDao imeiDao = new IMEIDao();
        String MaSPCT = txtMaSPCT.getText();
        List<IMEI> lstIMEI = imeiDao.findByID(MaSPCT);
        IMEIJDialog dialog = new IMEIJDialog((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this), true, this);
        dialog.setFormC(MaSPCT);
        dialog.fillTable(MaSPCT);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);


    }//GEN-LAST:event_btnThemSPCTActionPerformed

    private void btnXuatXuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatXuActionPerformed
        // TODO add your handling code here:
        XuatXuJDialog dialog = new XuatXuJDialog((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this), true, this);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnXuatXuActionPerformed

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
        // TODO add your handling code here:
        this.createSP();
        this.fillSanPham();
    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnSuaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSPActionPerformed
        // TODO add your handling code here:
        this.updateSP();
        this.fillSanPham();
    }//GEN-LAST:event_btnSuaSPActionPerformed

    private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
        // TODO add your handling code here:
        this.deleteSP();
        this.fillSanPham();
    }//GEN-LAST:event_btnXoaSPActionPerformed

    private void btnXoaSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPCTActionPerformed
        // TODO add your handling code here:
        this.deleteSPCT();
        this.fillSPCT();

    }//GEN-LAST:event_btnXoaSPCTActionPerformed

    private void btnTaoMaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMaSPActionPerformed
        // TODO add your handling code here:
        txtMaSP.setText(generateMaSP());
    }//GEN-LAST:event_btnTaoMaSPActionPerformed

    private void btnTaoMaSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMaSPCTActionPerformed
        // TODO add your handling code here:
        txtMaSPCT.setText(generateMaSPCT());
    }//GEN-LAST:event_btnTaoMaSPCTActionPerformed

    private void btnQLIMEIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLIMEIActionPerformed
        // TODO add your handling code here:
        String MaSPCT = txtMaSPCT.getText();
        IMEIJDialog dialog = new IMEIJDialog((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this), true, this);
        dialog.setFormC(MaSPCT);
        dialog.fillTable(MaSPCT);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);

    }//GEN-LAST:event_btnQLIMEIActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCPU;
    private javax.swing.JButton btnDungLuong;
    private javax.swing.JButton btnGPU;
    private javax.swing.JButton btnQLIMEI;
    private javax.swing.JButton btnRam;
    private javax.swing.JButton btnSuaSP;
    private javax.swing.JButton btnSuaSPCT;
    private javax.swing.JButton btnTaoMaSP;
    private javax.swing.JButton btnTaoMaSPCT;
    private javax.swing.JButton btnThemSP;
    private javax.swing.JButton btnThemSPCT;
    private javax.swing.JButton btnXoaSP;
    private javax.swing.JButton btnXoaSPCT;
    private javax.swing.JButton btnXuatXu;
    private javax.swing.JComboBox<String> cboCPU;
    private javax.swing.JComboBox<String> cboDungLuong;
    private javax.swing.JComboBox<String> cboGPU;
    private javax.swing.JComboBox<String> cboRAM;
    private javax.swing.JComboBox<String> cboXuatXu;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblIMEI;
    private javax.swing.JTable tblSPCT;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtMaSP2;
    private javax.swing.JTextField txtMaSPCT;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTenSP2;
    private javax.swing.JTextField txtTimKiemSP;
    private javax.swing.JTextField txtTimKiemSPCT;
    // End of variables declaration//GEN-END:variables

    public void open(){
        this.fillSanPham();
        this.fillSPCT();
        this.setForm(0);
        this.loadCPU();
        this.loadRam();
        this.loadGPU();
        this.loadDungLuong();
        this.loadXuatXu();
    }
    
    public void fillSanPham() {
//        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
//        model.setRowCount(0);
//        lstSP = daoSP.findAll();
//        lstSP.forEach(item -> {
//            Object[] rowdata = {
//                item.getMaSP(),
//                item.getTenSP(),
//                switch (item.getMaXuatXu()) {
//                    case "X1" ->
//                        "Mỹ";
//                    case "X2" ->
//                        "Trung Quốc";
//                    case "X3" ->
//                        "Nhật Bản";
//                    default ->
//                        "Không rõ";
//                }
//            };
//            model.addRow(rowdata);
//
//        });

        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        lstSP = daoSP.findAll();
        XuatXuDao daoXX = new XuatXuDao();
        List<XuatXu> lstXX = daoXX.findAll(); // hoặc lưu sẵn ở biến toàn cục nếu dùng nhiều

        for (SanPham item : lstSP) {
            // tìm XuatXu theo mã
            XuatXu xx = lstXX.stream()
                    .filter(x -> x.getMaXuatXu().equals(item.getMaXuatXu()))
                    .findFirst().orElse(new XuatXu("?", "Không rõ"));

            Object[] rowData = {
                item.getMaSP(),
                item.getTenSP(),
                xx // đưa object vào bảng
            };
            model.addRow(rowData);
        }

    }

    public void fillSPCT() {
        DefaultTableModel model = (DefaultTableModel) tblSPCT.getModel();
        model.setRowCount(0);

        lstTtSP = daoSPCT.findByMaSP(txtMaSP.getText());
        lstTtSP.forEach(item -> {
            model.addRow(new Object[]{
                item.getSpct().getMaSPCT(),
                item.getSpct().getMaSP(),
                item.getSanPham().getTenSP(),
                item.getCpu(),
                item.getRam(),
                item.getDungLuong(),
                item.getGpu(),
                item.getSpct().getGia(),
                item.getSpct().getSoLuong()
            });
        });
    }

    private void setForm(int row1) {

        txtMaSP.setText(tblSanPham.getValueAt(row1, 0).toString());
        txtTenSP.setText(tblSanPham.getValueAt(row1, 1).toString());
        cboXuatXu.setSelectedItem(tblSanPham.getValueAt(row1, 2));
        //setform spct
        txtMaSP2.setText(tblSanPham.getValueAt(row1, 0).toString());
        txtTenSP2.setText(tblSanPham.getValueAt(row1, 1).toString());

    }

    public void setForm1(int row) {
        txtMaSPCT.setText(tblSPCT.getValueAt(row, 0).toString());
//        txtIMEI.setText(tblSPCT.getValueAt(row, 7).toString());
        txtTenSP2.setText((tblSPCT.getValueAt(row, 2).toString()));
        txtGia.setText(tblSPCT.getValueAt(row, 7).toString());
        txtSoLuong.setText(tblSPCT.getValueAt(row, 8).toString());
        cboCPU.setSelectedItem(tblSPCT.getValueAt(row, 3));
        cboRAM.setSelectedItem(tblSPCT.getValueAt(row, 4));
        cboDungLuong.setSelectedItem(tblSPCT.getValueAt(row, 5));
        cboGPU.setSelectedItem(tblSPCT.getValueAt(row, 6));

    }

    public void loadCPU() {
        CPUDao cdao = new CPUDao();
        List<CPU> lstcpu = List.of();
        lstcpu = cdao.findAll();

        DefaultComboBoxModel cbomodel = new DefaultComboBoxModel();
        cboCPU.setModel(cbomodel);

        for (CPU cpu : lstcpu) {
            cbomodel.addElement(cpu);
        }
    }

    public void loadRam() {
        RAMDao rdao = new RAMDao();
        List<RAM> lstram = List.of();
        lstram = rdao.findAll();

        DefaultComboBoxModel cboModel = new DefaultComboBoxModel();
        cboRAM.setModel(cboModel);

        for (RAM ram : lstram) {
            cboModel.addElement(ram);
        }

    }

    public void loadGPU() {
        GPUDao gdao = new GPUDao();
        List<GPU> lstgpu = List.of();
        lstgpu = gdao.findAll();

        DefaultComboBoxModel cboModel = new DefaultComboBoxModel();
        cboGPU.setModel(cboModel);

        for (GPU gpu : lstgpu) {
            cboModel.addElement(gpu);
        }

    }

    public void loadDungLuong() {
        DungLuongDao ddao = new DungLuongDao();
        List<DungLuong> lstdl = List.of();
        lstdl = ddao.findAll();

        DefaultComboBoxModel cboModel = new DefaultComboBoxModel();
        cboDungLuong.setModel(cboModel);

        for (DungLuong dl : lstdl) {
            cboModel.addElement(dl);
        }

    }

    public void loadXuatXu() {
        XuatXuDao dao = new XuatXuDao();
        List<XuatXu> lstXX = List.of();
        lstXX = dao.findAll();

        DefaultComboBoxModel cboModel = new DefaultComboBoxModel();
        cboXuatXu.setModel(cboModel);

        for (XuatXu xx : lstXX) {
            cboModel.addElement(xx);
        }
    }

    public SanPham getForm() {
        SanPham entity = new SanPham();
        entity.setMaSP(txtMaSP.getText());
        XuatXu chonXX = (XuatXu) cboXuatXu.getSelectedItem();
        entity.setMaXuatXu(chonXX.getMaXuatXu());
        entity.setTenSP(txtTenSP.getText());

        return entity;
    }

    public void createSP() {
        try {
            if (txtTenSP.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tên sản phẩm không được để trống!");
                return; // Dừng lại, không tiếp tục thêm
            }

            SanPham entity = this.getForm();
            daoSP.create(entity);
            this.fillSanPham();
            JOptionPane.showMessageDialog(this, "Thêm thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Thêm thất bại!");
        }
    }

    public void updateSP() {
        try {
            if (txtTenSP.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tên sản phẩm không được để trống!");
                return; // Dừng lại, không tiếp tục thêm
            }

            SanPham entity = this.getForm();
            daoSP.update(entity);
            this.fillSanPham();
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Cập nhật thất bại!");
        }
    }

    public void deleteSP() {
        try {
            if (XDialog.confirm("Bạn thực sự muốn xóa?")) {
                String id = txtMaSP.getText();
                daoSP.deleteByID(id);
                this.fillSanPham();
            }
            JOptionPane.showMessageDialog(this, "Xóa thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Xóa thất bại!");
        }
    }

    public SanPhamChiTiet getForm1() {
        SanPhamChiTiet entity = new SanPhamChiTiet();
        entity.setMaSPCT(txtMaSPCT.getText());
        entity.setMaSP(txtMaSP2.getText());
        CPU cpu = (CPU) cboCPU.getSelectedItem();
        entity.setMaCPU(cpu.getMaCPU());
        RAM ram = (RAM) cboRAM.getSelectedItem();
        entity.setMaRAM(ram.getMaRAM());
        DungLuong dl = (DungLuong) cboDungLuong.getSelectedItem();
        entity.setMaDungLuong(dl.getMaDungLuong());
        GPU gpu = (GPU) cboGPU.getSelectedItem();
        entity.setMaGPU(gpu.getMaGPU());
        entity.setGia(Integer.parseInt(txtGia.getText()));
        int soLuong = 0;
        entity.setSoLuong(soLuong);

        return entity;
    }

    public void createSPCT() {
        if (txtGia.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Giá sản phẩm không được để trống!");
            return; // Dừng lại, không tiếp tục thêm
        }
        if (txtMaSPCT.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã sản phẩm chi tiết không được để trống!");
            return; // Dừng lại, không tiếp tục thêm
        }
        if (txtTenSP2.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên sản phẩm không được để trống!");
            return; // Dừng lại, không tiếp tục thêm
        }

        int giaSPCT;
        try {
            giaSPCT = Integer.parseInt(txtGia.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá sản phẩm phải là số nguyên!");
            return;
        }

        try {
            SanPhamChiTiet entity = this.getForm1();
            daoSPCT.create(entity);
            JOptionPane.showMessageDialog(this, "Thêm thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Thêm thất bại!");
        }

        this.fillSPCT();

    }

    public void updateSPCT() {
        try {
            if (txtGia.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Giá sản phẩm không được để trống!");
                return; // Dừng lại, không tiếp tục thêm
            }
            if (txtSoLuong.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Số lượng sản phẩm không được để trống!");
                return; // Dừng lại, không tiếp tục thêm
            }
            if (txtTenSP2.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tên sản phẩm không được để trống!");
                return; // Dừng lại, không tiếp tục thêm
            }
            SanPhamChiTiet entity = this.getForm1();
            daoSPCT.update(entity);
            this.fillSanPham();
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Cập nhật thất bại!");
        }
    }

    public void deleteSPCT() {
        try {
            if (XDialog.confirm("Bạn thực sự muốn xóa")) {
                String id = txtMaSPCT.getText();
                daoSPCT.deleteByID(id);
                this.fillSPCT();
            }
            JOptionPane.showMessageDialog(this, "Xóa thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Xóa thất bại!");
        }
    }

    public void MaSPCTforIM() {
        String mSPCT = txtMaSPCT.getText();
    }

    public void TimKiemSP() {
        String keyword = txtTimKiemSP.getText().trim().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0); // xóa dữ liệu cũ

        XuatXuDao daoXX = new XuatXuDao();
        List<XuatXu> lstXX = daoXX.findAll(); // danh sách xuất xứ

        // duyệt qua tất cả sản phẩm để lọc
        for (SanPham sp : daoSP.findAll()) {
            // tìm thông tin xuất xứ tương ứng
            XuatXu xx = lstXX.stream()
                    .filter(x -> x.getMaXuatXu().equals(sp.getMaXuatXu()))
                    .findFirst().orElse(new XuatXu("?", "Không rõ"));

            String maSP = sp.getMaSP().toLowerCase();
            String tenSP = sp.getTenSP().toLowerCase();
            String xuatXu = xx.getXuatXu().toLowerCase();

            // kiểm tra xem keyword có nằm trong các trường dữ liệu hay không
            if (maSP.contains(keyword) || tenSP.contains(keyword) || xuatXu.contains(keyword)) {
                Object[] rowData = {
                    sp.getMaSP(),
                    sp.getTenSP(),
                    xx
                };
                model.addRow(rowData);
            }
        }
    }

    public void TimKiemSPCT() {
        String keyword = txtTimKiemSPCT.getText().trim().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) tblSPCT.getModel();
        model.setRowCount(0); // xóa dữ liệu cũ

        List<ThongTinSP> all = daoSPCT.findALLtt(); // lấy toàn bộ chi tiết sản phẩm
        for (ThongTinSP item : all) {
            String maSPCT = item.getSpct().getMaSPCT().toLowerCase();
            String maSP = item.getSpct().getMaSP().toLowerCase();
            String tenSP = item.getSanPham().getTenSP().toLowerCase();
            String cpu = item.getCpu().toString().toLowerCase();
            String ram = item.getRam().toString().toLowerCase();
            String dungLuong = item.getDungLuong().toString().toLowerCase();
            String gpu = item.getGpu().toString().toLowerCase();
            String soIMEI = item.getSoIMEI().toLowerCase();

            // nếu keyword xuất hiện trong bất kỳ trường nào thì hiển thị dòng đó
            if (maSPCT.contains(keyword) || maSP.contains(keyword) || tenSP.contains(keyword)
                    || cpu.contains(keyword) || ram.contains(keyword)
                    || dungLuong.contains(keyword) || gpu.contains(keyword)
                    || soIMEI.contains(keyword)) {

                model.addRow(new Object[]{
                    item.getSpct().getMaSPCT(),
                    item.getSpct().getMaSP(),
                    item.getSanPham().getTenSP(),
                    item.getCpu(),
                    item.getRam(),
                    item.getDungLuong(),
                    item.getGpu(),
                    item.getSoIMEI(),
                    item.getSpct().getGia(),
                    item.getSpct().getSoLuong()
                });
            }
        }
    }

    private String generateMaSP() {
        List<SanPham> list = daoSP.findAll(); // lấy tất cả sản phẩm từ DB
        int maxNumber = 0;

        for (SanPham sp : list) {
            String ma = sp.getMaSP(); // ví dụ: "SP12"
            if (ma.toUpperCase().startsWith("SP")) {
                try {
                    int number = Integer.parseInt(ma.substring(2));
                    if (number > maxNumber) {
                        maxNumber = number;
                    }
                } catch (NumberFormatException e) {
                    // Bỏ qua mã sai định dạng
                }
            }
        }

        return "SP" + (maxNumber + 1);
    }

    private String generateMaSPCT() {
        List<ThongTinSP> list = daoSPCT.findALLtt(); // lấy tất cả sản phẩm từ DB
        int maxNumber = 0;

        for (ThongTinSP sp : list) {
            String ma = sp.getSpct().getMaSPCT(); // ví dụ: "SP12"
            if (ma.toUpperCase().startsWith("SPCT")) {
                try {
                    int number = Integer.parseInt(ma.substring(4));
                    if (number > maxNumber) {
                        maxNumber = number;
                    }
                } catch (NumberFormatException e) {
                    // Bỏ qua mã sai định dạng
                }
            }
        }

        return "SPCT" + (maxNumber + 1);
    }

    public void fillIMEI() {
        String MaSPCT = txtMaSPCT.getText();
        DefaultTableModel model = (DefaultTableModel) tblIMEI.getModel();
        model.setRowCount(0);
        List<IMEI> lstIM = List.of();
        IMEIDao daoIM = new IMEIDao();
        lstIM = daoIM.findByID(MaSPCT);
        lstIM.forEach(item -> {
            model.addRow(new Object[]{
                item.getMaIMEI(),
                item.getMaSPCT(),
                item.getSoIMEI()
            });
        });

    }
}
